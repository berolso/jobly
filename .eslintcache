[{"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/index.js":"1","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/App.js":"2","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/reportWebVitals.js":"3","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/reducer.js":"4","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/actions.js":"5","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Navigation.js":"6","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Routes.js":"7","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Cart.js":"8","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/List.js":"9","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/ListItem.js":"10","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Product.js":"11"},{"size":821,"mtime":1610465097026,"results":"12","hashOfConfig":"13"},{"size":389,"mtime":1610517887522,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610423510458,"results":"15","hashOfConfig":"13"},{"size":595,"mtime":1610598170862,"results":"16","hashOfConfig":"13"},{"size":278,"mtime":1610590601187,"results":"17","hashOfConfig":"13"},{"size":1313,"mtime":1610607289490,"results":"18","hashOfConfig":"13"},{"size":560,"mtime":1610602081610,"results":"19","hashOfConfig":"13"},{"size":749,"mtime":1610589885444,"results":"20","hashOfConfig":"13"},{"size":690,"mtime":1610589866352,"results":"21","hashOfConfig":"13"},{"size":1874,"mtime":1610606592425,"results":"22","hashOfConfig":"13"},{"size":2036,"mtime":1610607200007,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"llvlkf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/index.js",[],["49","50"],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/App.js",[],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/reportWebVitals.js",[],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/reducer.js",[],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/actions.js",[],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Navigation.js",[],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Routes.js",["51"],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Cart.js",["52"],"import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { ListGroup, ListGroupItem, Container } from \"reactstrap\";\n\nconst Cart = () => {\n  const cart = useSelector((state) => state.cart);\n  const products = useSelector((state) => state.products);\n\n  const productList = Object.keys(cart).map((product) => (\n    <ListGroupItem style={{ color: \"gray\" }} color=\"muted\" key={uuid()}>\n      <ListItem isCart={true} products={products} product={product} />\n    </ListGroupItem>\n  ));\n\n  return (\n    <Container style={{ margin: \"auto\" }}>\n      <h1>Cart</h1>\n      <ListGroup>{productList}</ListGroup>);\n    </Container>\n  );\n};\nexport default Cart;\n","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/List.js",[],"/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/ListItem.js",["53"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { updateItemQuantity, removeItem } from \"./actions\";\nimport { Form, FormGroup, Input, Button } from \"reactstrap\";\n\nconst ListItem = ({isCart, products, product }) => {\n  // handle redux store to update quantity\n  const dispatch = useDispatch();\n  const RdxStoreQty = useSelector((state) => state.cart[product] || 0);\n  const update = () => {\n    dispatch(updateItemQuantity(product, quantity));\n  };\n\n  const initialState = RdxStoreQty;\n  const [quantity, setQuantity] = useState(initialState);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setQuantity((cur) => (value > 0 ? value : 0));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    update();\n  };\n\n  const handleDelete = () =>{\n    setQuantity(() => 0)\n    dispatch(removeItem(product, quantity))\n  }\n\n  return (\n    <div>\n      <h3>{products[product].name}</h3>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Link to={`/products/${product}`}>\n        <img\n          style={{ width: \"200px\", margin: \"auto\" }}\n          src={`${products[product].image_url}`}\n          />\n          </Link>\n        <Form style={{ width: \"20%\", margin: \"auto\" }} onSubmit={handleSubmit}>\n          <FormGroup>\n            <label htmlFor=\"quantity\">Quantity</label>\n            <Input\n              size=\"sm\"\n              id=\"quantity\"\n              name=\"quantity\"\n              value={quantity}\n              type=\"number\"\n              onChange={handleChange}\n            ></Input>\n            <Button size=\"sm\">Update</Button>\n          </FormGroup>\n        </Form>\n        {isCart && <Button color=\"danger\" size='sm' onClick={handleDelete}>X</Button>}\n        \n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","/Users/Willakenzie/Desktop/coding/SpringBoard/44 Redux/44.3 React Redux Patterns/redux-shoply/shoply/src/Product.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":25,"nodeType":"60","messageId":"61","endLine":2,"endColumn":33},{"ruleId":"58","severity":1,"message":"62","line":3,"column":23,"nodeType":"60","messageId":"61","endLine":3,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":39,"column":9,"nodeType":"65","endLine":42,"endColumn":13},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]